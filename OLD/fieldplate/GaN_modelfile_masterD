#########################################################################################
#constants for each material
#########################################################################################

set k 1.38066e-23
set q 1.60218e-19
set Vt ($k*Temp/$q)
set eps0 8.854e-14
set kev 8.617e-5
set VtRoom [expr $k*300.0/$q]
set hbar 1.054571628e-34
set egan 7.88e-13

source GaN.tcl
source AlGaN.tcl
source SiC.tcl
source AlN.tcl
source Metal.tcl
source Insulator.tcl

#thermal domain
#solution add name=Temp solve pde !negative continuous damp
solution add name=Temp const val=300.0
#solution add name=Impurity solve negative damp

#electrical domain

solution add name=DevPsi solve negative damp continuous
solution add name=Qfp solve negative damp continuous
solution add name=Qfn solve negative damp continuous

source Poisson.tcl
Poisson GaN
Poisson AlGaN
InsPoisson Metal
InsPoisson Nitride
InsPoisson Oxide
InsPoisson HighK

source Continuity.tcl
ElecContinuity GaN
ElecContinuity AlGaN
ElecContinuity SiC
ElecContinuity AlN
HoleContinuity GaN
HoleContinuity AlGaN
HoleContinuity SiC
HoleContinuity AlN


#Add interface charge
pdbSetString AlGaN_GaN DevPsi Equation "1.2e13"
#pdbSetString AlGaN_GaN DevPsi Equation "-1*(1e13*log(AlN_Ratio)+3e13)"

#Electrical Initial Conditions
proc Initialize {} {
    global Vt
    sel z=300.00 name=Temp

    #four components - GaN ntype, GaN ptype, AlGaN ntype, AlGaN ptype

    #GaN First
    set nc "([pdbDelayDouble GaN Elec Nc])"
    set nv "([pdbDelayDouble GaN Hole Nv])"
    set aff "([pdbGetDouble GaN Affinity])"
    set Eg "([pdbGetDouble GaN Eg])"
    sel z= abs(Doping)+1.0 name=AbsDop

    sel z = "Mater(GaN) * ((Doping>0.0) ? (-$Vt * log( AbsDop / $nc) + $aff) : 0.0)"  name=GaN_N
    sel z = "Mater(GaN) * ((Doping<0.0) ? ($Vt * log(AbsDop / $nv) + $aff + $Eg) : 0.0)"  name=GaN_P

    #now AlGaN
    set nc "([pdbDelayDouble AlGaN Elec Nc])"
    set nv "([pdbDelayDouble AlGaN Hole Nv])"
    set aff "([pdbGetDouble AlGaN Affinity])"
    set Eg "([pdbGetDouble AlGaN Eg])"

    sel z = "Mater(AlGaN) * ((Doping>0.0) ? (-$Vt * log(AbsDop / $nc) + $aff) : 0.0)"  name=AlGaN_N
    sel z = "Mater(AlGaN) * ((Doping<0.0) ? ($Vt * log(AbsDop / $nv) + $aff + $Eg) : 0.0)"  name=AlGaN_P

 
    #now SiC
    set nc "([pdbDelayDouble SiC Elec Nc])"
    set nv "([pdbDelayDouble SiC Hole Nv])"
    set aff "([pdbGetDouble SiC Affinity])"
    set Eg "([pdbGetDouble SiC Eg])"

    sel z = "Mater(SiC) * ((Doping>0.0) ? (-$Vt * log(AbsDop / $nc) + $aff) : 0.0)"  name=SiC_N
    sel z = "Mater(SiC) * ((Doping<0.0) ? ($Vt * log(AbsDop / $nv) + $aff + $Eg) : 0.0)"  name=SiC_P

    #now AlN
    set nc "([pdbDelayDouble AlN Elec Nc])"
    set nv "([pdbDelayDouble AlN Hole Nv])"
    set aff "([pdbGetDouble AlN Affinity])"
    set Eg "([pdbGetDouble AlN Eg])"

    sel z = "Mater(AlN) * ((Doping>0.0) ?  (-$Vt * log(AbsDop / $nc) + $aff) : 0.0)"  name=AlN_N
    sel z = "Mater(AlN) * ((Doping<0.0) ?  ($Vt * log(AbsDop / $nv) + $aff + $Eg) : 0.0)"  name=AlN_P

    #now Metal
    InitMetal

    #now Insulators
    InitInsulator Oxide
    InitInsulator Nitride
    InitInsulator HighK
    
    #sum them together
    sel z=GaN_N+GaN_P+AlGaN_N+AlGaN_P+MetalDevPsi+DevPsiOxide+DevPsiNitride+DevPsiHighK name=DevPsi

    sel z=0 name=DonorTraps
    sel z=0.0 name=Qfn
    sel z=0.0 name=Qfp
    sel z=0.0 name=Impurity
}
